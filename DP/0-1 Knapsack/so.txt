#include <iostream>
#include <vector>

using namespace std;

int helperSO(int capacity, vector<int> &wt, vector<int> &profit, int n){
    vector<int> next(capacity+1,0);
    vector<int> curr(capacity+1,0);

    for(int j=n-1;j>=0;j--){
        for(int i=0;i<=capacity;i++){
            int include =0;
            if(wt[j]<=i){
                include = profit[j] + next[i-w[j]];
            }
            int exclude = 0 + next[i];
            curr[i] = max(include, exclude);
        }

        next = curr;
    }

    return curr[capacity];
}

int main(){
    int capacity = 50;
    vector<int> wt = {10,20,30};
    vector<int> profit = {60,100,120};

    int n=3;

    int ans = helperSO(capacity, wt, profit,n);

    cout<< "Max Profit" << ans << endl;

    return 0;
}