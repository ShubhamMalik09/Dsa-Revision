#include <iostream>
#include <vector>

using namespace std;

int helperTab(int capacity, vector<int> &wt, vector<int> &profit, int n){
    vector<vector<int>> dp(capacity+1, vector<int>(n+1,0));

    for(int i=0;i<=capacity;i++){
        dp[i][n] = 0;
    }

    for(int i=0;i<=capacity;i++){
        for(int j=n-1;j>=0;j--){
            int include =0;
            if(wt[j]<=i){
                include = profit[j] + dp[i-w[j]][j+1];
            }
            int exclude = 0 + dp[i][j+1];
            dp[i][j] = max(include, exclude);
        }
    }

    return dp[capacity][0];
}

int main(){
    int capacity = 50;
    vector<int> wt = {10,20,30};
    vector<int> profit = {60,100,120};

    int n=3;

    int ans = helperTab(capacity, wt, profit, n);

    cout<< "Max Profit" << ans << endl;

    return 0;
}