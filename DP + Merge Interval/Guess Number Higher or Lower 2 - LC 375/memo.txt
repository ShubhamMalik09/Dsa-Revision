# merge interval means we are dividing the cases into [1,i] then [i,n]


class Solution {
public:
    int helperMemo(int start, int end, vector<vector<int>> &dp){
        if(start> end){
            return 0; // out of range
        }
        if(start==end){
            return 0; //means single number only therefore 0 penality
        }

        if(dp[start][end]!=-1){
            return dp[start][end];
        }

        int ans = INT_MAX;
        for(int i=start;i<=end;i++){
            ans = min(ans, i+ max(helperRec(start,i-1,dp), helperRec(i+1,end,dp)));
        }

        dp[start][end] = ans;

        return dp[start][end];
    }
    int getMoneyAmount(int n) {
        vector<vector<int>> dp(n+1,vector<int> (n+1,-1));
        return helperRec(1,n, dp);
    }
};